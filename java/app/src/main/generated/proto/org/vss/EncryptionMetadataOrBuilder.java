// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vss.proto

// Protobuf Java Version: 3.25.5
package org.vss;

public interface EncryptionMetadataOrBuilder extends
		// @@protoc_insertion_point(interface_extends:vss.EncryptionMetadata)
		com.google.protobuf.MessageOrBuilder {

	/**
	 * <pre>
	 * The encryption algorithm used for encrypting the `PlaintextBlob`.
	 * </pre>
	 *
	 * <code>string cipher_format = 1;</code>
	 *
	 * @return The cipherFormat.
	 */
	java.lang.String getCipherFormat();

	/**
	 * <pre>
	 * The encryption algorithm used for encrypting the `PlaintextBlob`.
	 * </pre>
	 *
	 * <code>string cipher_format = 1;</code>
	 *
	 * @return The bytes for cipherFormat.
	 */
	com.google.protobuf.ByteString
	getCipherFormatBytes();

	/**
	 * <pre>
	 * The nonce used for encryption. Nonce is a random or unique value used to ensure that the same
	 * plaintext results in different ciphertexts every time it is encrypted.
	 * </pre>
	 *
	 * <code>bytes nonce = 2;</code>
	 *
	 * @return The nonce.
	 */
	com.google.protobuf.ByteString getNonce();

	/**
	 * <pre>
	 * The authentication tag used for encryption. It provides integrity and authenticity assurance
	 * for the encrypted data.
	 * </pre>
	 *
	 * <code>bytes tag = 3;</code>
	 *
	 * @return The tag.
	 */
	com.google.protobuf.ByteString getTag();
}
