// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vss.proto

// Protobuf Java Version: 3.25.5
package org.vss;

/**
 * <pre>
 * ErrorCodes to be used in `ErrorResponse`
 * </pre>
 * <p>
 * Protobuf enum {@code vss.ErrorCode}
 */
public enum ErrorCode
		implements com.google.protobuf.ProtocolMessageEnum {
	/**
	 * <pre>
	 * Default protobuf Enum value. Will not be used as `ErrorCode` by server.
	 * </pre>
	 *
	 * <code>UNKNOWN = 0;</code>
	 */
	UNKNOWN(0),
	/**
	 * <pre>
	 * Used when the request contains mismatched version (either key or global)
	 * in `PutObjectRequest`. For more info refer `PutObjectRequest`.
	 * </pre>
	 *
	 * <code>CONFLICT_EXCEPTION = 1;</code>
	 */
	CONFLICT_EXCEPTION(1),
	/**
	 * <pre>
	 * Used in the following cases:
	 *   - The request was missing a required argument.
	 *   - The specified argument was invalid, incomplete or in the wrong format.
	 *   - The request body of api cannot be deserialized into corresponding protobuf object.
	 * </pre>
	 *
	 * <code>INVALID_REQUEST_EXCEPTION = 2;</code>
	 */
	INVALID_REQUEST_EXCEPTION(2),
	/**
	 * <pre>
	 * Used when an internal server error occurred, client is probably at no fault and can safely retry
	 * this error with exponential backoff.
	 * </pre>
	 *
	 * <code>INTERNAL_SERVER_EXCEPTION = 3;</code>
	 */
	INTERNAL_SERVER_EXCEPTION(3),
	/**
	 * <pre>
	 * Used when the specified `key` in a `GetObjectRequest` does not exist.
	 * </pre>
	 *
	 * <code>NO_SUCH_KEY_EXCEPTION = 4;</code>
	 */
	NO_SUCH_KEY_EXCEPTION(4),
	/**
	 * <pre>
	 * Used when authentication fails or in case of an unauthorized request.
	 * </pre>
	 *
	 * <code>AUTH_EXCEPTION = 5;</code>
	 */
	AUTH_EXCEPTION(5),
	UNRECOGNIZED(-1),
	;

	/**
	 * <pre>
	 * Default protobuf Enum value. Will not be used as `ErrorCode` by server.
	 * </pre>
	 *
	 * <code>UNKNOWN = 0;</code>
	 */
	public static final int UNKNOWN_VALUE = 0;
	/**
	 * <pre>
	 * Used when the request contains mismatched version (either key or global)
	 * in `PutObjectRequest`. For more info refer `PutObjectRequest`.
	 * </pre>
	 *
	 * <code>CONFLICT_EXCEPTION = 1;</code>
	 */
	public static final int CONFLICT_EXCEPTION_VALUE = 1;
	/**
	 * <pre>
	 * Used in the following cases:
	 *   - The request was missing a required argument.
	 *   - The specified argument was invalid, incomplete or in the wrong format.
	 *   - The request body of api cannot be deserialized into corresponding protobuf object.
	 * </pre>
	 *
	 * <code>INVALID_REQUEST_EXCEPTION = 2;</code>
	 */
	public static final int INVALID_REQUEST_EXCEPTION_VALUE = 2;
	/**
	 * <pre>
	 * Used when an internal server error occurred, client is probably at no fault and can safely retry
	 * this error with exponential backoff.
	 * </pre>
	 *
	 * <code>INTERNAL_SERVER_EXCEPTION = 3;</code>
	 */
	public static final int INTERNAL_SERVER_EXCEPTION_VALUE = 3;
	/**
	 * <pre>
	 * Used when the specified `key` in a `GetObjectRequest` does not exist.
	 * </pre>
	 *
	 * <code>NO_SUCH_KEY_EXCEPTION = 4;</code>
	 */
	public static final int NO_SUCH_KEY_EXCEPTION_VALUE = 4;
	/**
	 * <pre>
	 * Used when authentication fails or in case of an unauthorized request.
	 * </pre>
	 *
	 * <code>AUTH_EXCEPTION = 5;</code>
	 */
	public static final int AUTH_EXCEPTION_VALUE = 5;


	public final int getNumber() {
		if (this == UNRECOGNIZED) {
			throw new java.lang.IllegalArgumentException(
					"Can't get the number of an unknown enum value.");
		}
		return value;
	}

	/**
	 * @param value The numeric wire value of the corresponding enum entry.
	 * @return The enum associated with the given numeric wire value.
	 * @deprecated Use {@link #forNumber(int)} instead.
	 */
	@java.lang.Deprecated
	public static ErrorCode valueOf(int value) {
		return forNumber(value);
	}

	/**
	 * @param value The numeric wire value of the corresponding enum entry.
	 * @return The enum associated with the given numeric wire value.
	 */
	public static ErrorCode forNumber(int value) {
		switch (value) {
			case 0:
				return UNKNOWN;
			case 1:
				return CONFLICT_EXCEPTION;
			case 2:
				return INVALID_REQUEST_EXCEPTION;
			case 3:
				return INTERNAL_SERVER_EXCEPTION;
			case 4:
				return NO_SUCH_KEY_EXCEPTION;
			case 5:
				return AUTH_EXCEPTION;
			default:
				return null;
		}
	}

	public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
	internalGetValueMap() {
		return internalValueMap;
	}

	private static final com.google.protobuf.Internal.EnumLiteMap<
			ErrorCode> internalValueMap =
			new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
				public ErrorCode findValueByNumber(int number) {
					return ErrorCode.forNumber(number);
				}
			};

	public final com.google.protobuf.Descriptors.EnumValueDescriptor
	getValueDescriptor() {
		if (this == UNRECOGNIZED) {
			throw new java.lang.IllegalStateException(
					"Can't get the descriptor of an unrecognized enum value.");
		}
		return getDescriptor().getValues().get(ordinal());
	}

	public final com.google.protobuf.Descriptors.EnumDescriptor
	getDescriptorForType() {
		return getDescriptor();
	}

	public static final com.google.protobuf.Descriptors.EnumDescriptor
	getDescriptor() {
		return org.vss.Vss.getDescriptor().getEnumTypes().get(0);
	}

	private static final ErrorCode[] VALUES = values();

	public static ErrorCode valueOf(
			com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
		if (desc.getType() != getDescriptor()) {
			throw new java.lang.IllegalArgumentException(
					"EnumValueDescriptor is not for this type.");
		}
		if (desc.getIndex() == -1) {
			return UNRECOGNIZED;
		}
		return VALUES[desc.getIndex()];
	}

	private final int value;

	private ErrorCode(int value) {
		this.value = value;
	}

	// @@protoc_insertion_point(enum_scope:vss.ErrorCode)
}

